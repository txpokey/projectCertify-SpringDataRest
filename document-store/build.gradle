ext['groovy.version'] = groovyVersion // need for compile groovy to pick up groovy fix

allprojects {
    group = 'jh.apple'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'groovy'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    version =  "${outputLibVersion}"


    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/libs-release/" }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-rest'
        implementation 'org.codehaus.groovy:groovy'
        implementation 'org.springframework.data:spring-data-rest-hal-browser'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        // --------------------
        implementation('org.springframework.boot:spring-boot-starter-actuator')
        testImplementation('org.springframework.boot:spring-boot-starter-test')
        // --------------------
        implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
        testImplementation("org.testng:testng:${testNgVersion}")
        implementation('com.google.code.findbugs:jsr305:latest.integration')
    }
    buildDir="$projectDir/out"
    clean {
        delete 'out'
        delete 'build'
    }
}

apply from: "${rootProject.projectDir}/etc/gradle/apply/peek.gradle", to: allprojects

buildscript {

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "https://repo.spring.io/plugins-release/" }
        maven { url "https://repo.spring.io/libs-release/" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.codehaus.groovy:groovy:${groovyVersion}")
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
    }
}